using System.Collections; using System.Collections.Generic; using UnityEngine;  public class MoveAndRangedAttack : MonoBehaviour {      private Vector2 movementSpeed;     public Vector2 defSpeed;     private Vector2 stopped = Vector2.zero;     public float attackStr;     public float attackSpeed = 0.5f;     private float nextAttack = 0.0f;     public float range;      private bool isColliding;     private RaycastHit2D Hit;     public LayerMask filter;      public GameObject projectile;     private GameObject firing;      public GameObject aim;     private Vector3 AimPos;     // Use this for initialization     void Start()     {         range = 3f;         movementSpeed = defSpeed;     }         private void FixedUpdate()     {         AimPos = aim.transform.position - transform.position;         Hit = Physics2D.Raycast(transform.position, AimPos, range, filter);          if (Hit.collider == true)         {             movementSpeed = stopped;             if (Time.time > nextAttack)             {                 nextAttack = Time.time + attackSpeed;                 Debug.Log("Time Set attack");                 launchProjectile();             }         }                Debug.DrawRay(transform.position, AimPos);         GetComponent<Rigidbody2D>().velocity = movementSpeed;         if (isColliding == false)         {             movementSpeed = defSpeed;         }         }     private void launchProjectile()     {         firing = Instantiate(projectile, transform.position, transform.rotation, transform);         firing.GetComponent<Rigidbody2D>().velocity = AimPos;     }          private void OnTriggerStay2D(Collider2D trigCol)     {         if (this.gameObject.tag == "Monster" && (trigCol.gameObject.tag == "Tower" || trigCol.gameObject.tag == "EnemyMob")             || this.gameObject.tag == "EnemyMob" && (trigCol.gameObject.tag == "Player Tower" || trigCol.gameObject.tag == "Monster" || trigCol.gameObject.tag == "Wall"))         {             isColliding = true;             movementSpeed = stopped;             if (Time.time > nextAttack)             {                 nextAttack = Time.time + attackSpeed;                 Debug.Log("Time Set attack");                 trigCol.gameObject.GetComponent<Health>().doDamage(attackStr);             }         }                else             isColliding = false;     }     private void OnTriggerExit2D(Collider2D collision)     {         isColliding = false;     } } 